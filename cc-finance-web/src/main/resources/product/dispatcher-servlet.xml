<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.1.xsd    
    					http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<aop:aspectj-autoproxy />

	<context:annotation-config />
	
	<mvc:resources location="/WEB-INF/images/" mapping="/images/**" />
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**" />
	<mvc:resources location="/WEB-INF/css/" mapping="/css/**" />
	<mvc:resources location="/WEB-INF/fonts/" mapping="/fonts/**" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- 保证spring-mvc.xml的context:component-scan只扫描Controller,而 applicationContext.xml里的不包含Controller. 
		否则在applicationContext.xml里的事务就要失效了。 -->
	<context:component-scan base-package="com.dataup.finance"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />

	<!-- 自定义类型绑定 -->
	<bean id="bindingInitializer"
		class="com.dataup.finance.base.webmvc.initbinder.BindingInitializer" />

	<!-- 开启MVC的JSON功能。可以使用@ResponseBody和@RequestBody来输出和输入JSON串 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain; charset=UTF-8</value>
				<value>application/json; charset=UTF-8</value>
				<value>application/javascript; charset=UTF-8</value>
				<value>text/json; charset=UTF-8</value>
				<value>text/javascript; charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 解析xml请求数据，将xml转换为java对象 -->
	<!-- <bean id="marshallingHttpMessageConverter" -->
	<!-- class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"> -->
	<!-- <constructor-arg> -->
	<!-- <bean class="org.springframework.oxm.xstream.XStreamMarshaller"> -->
	<!-- <property name="streamDriver"> -->
	<!-- <bean class="com.thoughtworks.xstream.io.xml.DomDriver" /> -->
	<!-- </property> -->

	<!-- <property name="autodetectAnnotations"> -->
	<!-- <value>true</value> -->
	<!-- </property> -->
	<!--可以与xml互换的对象，需要使用XStream的注解，注解的使用方法请参XStream官网 -->

	<!-- <property name="annotatedClasses"> -->
	<!-- <list> -->
	<!-- <value>com.gd.app.rdc.road.entity.RoadTask</value> -->
	<!-- </list> -->
	<!-- </property> -->

	<!-- </bean> -->
	<!-- </constructor-arg> -->
	<!-- </bean> -->
	<bean id="formHttpMessageConverter"
		class="org.springframework.http.converter.FormHttpMessageConverter" />
	<bean id="bufferedImageHttpMessageConverter"
		class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
	<bean id="byteArrayHttpMessageConverter"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain; charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="resourceHttpMessageConverter"
		class="org.springframework.http.converter.ResourceHttpMessageConverter" />

	<!-- -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="bindingInitializer">
		</property>
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJacksonHttpMessageConverter" />
				<ref bean="formHttpMessageConverter" />
				<ref bean="bufferedImageHttpMessageConverter" />
				<ref bean="byteArrayHttpMessageConverter" />
				<ref bean="resourceHttpMessageConverter" />
				<!-- <ref bean="marshallingHttpMessageConverter"/> -->
			</list>
		</property>
	</bean>

	<!-- 开启文件上传功能。注意：id一定要是multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<!-- i18n支持 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="i18n/messages" />

	<!-- 配置异常抛出的对应页面 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">
					security/unauthorized.jsp
				</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">
					security/unauthenticated.jsp
				</prop>
				<prop key="org.apache.shiro.authc.UnknownAccountException">
					login.jsp?msg=用户不存在！
				</prop>
				<prop key="org.apache.shiro.authc.IncorrectCredentialsException">
					login.jsp?msg=密码错误！
				</prop>
				<prop key="org.apache.shiro.authc.AuthenticationException">
					login.jsp?msg=用户名或密码错误！
				</prop>

			</props>
		</property>
	</bean>

</beans>